//----------------------
// <auto-generated>
//     Generated using the NJsonSchema v10.9.0.0 (Newtonsoft.Json v9.0.0.0) (http://NJsonSchema.org)
// </auto-generated>
//----------------------


namespace AutomaticGenerators
{
    #pragma warning disable // Disable all warnings

    [Bonsai.CombinatorAttribute()]
    [Bonsai.WorkflowElementCategoryAttribute(Bonsai.ElementCategory.Source)]
    public partial class Point
    {
    
        private double _x = 0D;
    
        private double _y = 0D;
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="x")]
        public double X
        {
            get
            {
                return _x;
            }
            set
            {
                _x = value;
            }
        }
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="y")]
        public double Y
        {
            get
            {
                return _y;
            }
            set
            {
                _y = value;
            }
        }
    
        public System.IObservable<Point> Process()
        {
            return System.Reactive.Linq.Observable.Defer(() => System.Reactive.Linq.Observable.Return(
                new Point
                {
                    X = _x,
                    Y = _y
                }));
        }
    }


    [Bonsai.CombinatorAttribute()]
    [Bonsai.WorkflowElementCategoryAttribute(Bonsai.ElementCategory.Source)]
    public partial class AnimationSettings
    {
    
        private double _duration = 2D;
    
        private double _initialRadius = 0.5D;
    
        private double _initialVirtualDistance = 12.5D;
    
        private double _linearApproachingVelocity = 25D;
    
        private double _maxRadius = 25D;
    
        private double _monitorDistance = 25D;
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="duration")]
        public double Duration
        {
            get
            {
                return _duration;
            }
            set
            {
                _duration = value;
            }
        }
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="initialRadius")]
        public double InitialRadius
        {
            get
            {
                return _initialRadius;
            }
            set
            {
                _initialRadius = value*2;
            }
        }
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="initialVirtualDistance")]
        public double InitialVirtualDistance
        {
            get
            {
                return _initialVirtualDistance;
            }
            set
            {
                _initialVirtualDistance = value;
            }
        }
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="linearApproachingVelocity")]
        public double LinearApproachingVelocity
        {
            get
            {
                return _linearApproachingVelocity;
            }
            set
            {
                _linearApproachingVelocity = value;
            }
        }
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="maxRadius")]
        public double MaxRadius
        {
            get
            {
                return _maxRadius;
            }
            set
            {
                _maxRadius = value*2;
            }
        }
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="monitorDistance")]
        public double MonitorDistance
        {
            get
            {
                return _monitorDistance;
            }
            set
            {
                _monitorDistance = value;
            }
        }
    
        public System.IObservable<AnimationSettings> Process()
        {
            return System.Reactive.Linq.Observable.Defer(() => System.Reactive.Linq.Observable.Return(
                new AnimationSettings
                {
                    Duration = _duration,
                    InitialRadius = _initialRadius,
                    InitialVirtualDistance = _initialVirtualDistance,
                    LinearApproachingVelocity = _linearApproachingVelocity,
                    MaxRadius = _maxRadius,
                    MonitorDistance = _monitorDistance
                }));
        }
    }


    [Bonsai.CombinatorAttribute()]
    [Bonsai.WorkflowElementCategoryAttribute(Bonsai.ElementCategory.Source)]
    public partial class Color
    {
    
        private double _a = 1D;
    
        private double _b = 0D;
    
        private double _g = 0D;
    
        private double _r = 0D;
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="a")]
        public double A
        {
            get
            {
                return _a;
            }
            set
            {
                _a = value;
            }
        }
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="b")]
        public double B
        {
            get
            {
                return _b;
            }
            set
            {
                _b = value;
            }
        }
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="g")]
        public double G
        {
            get
            {
                return _g;
            }
            set
            {
                _g = value;
            }
        }
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="r")]
        public double R
        {
            get
            {
                return _r;
            }
            set
            {
                _r = value;
            }
        }
    
        public System.IObservable<Color> Process()
        {
            return System.Reactive.Linq.Observable.Defer(() => System.Reactive.Linq.Observable.Return(
                new Color
                {
                    A = _a,
                    B = _b,
                    G = _g,
                    R = _r
                }));
        }
    }


    [Bonsai.CombinatorAttribute()]
    [Bonsai.WorkflowElementCategoryAttribute(Bonsai.ElementCategory.Source)]
    public partial class ControlNoisyStimuli
    {
    
        private AnimationSettings _animationSettings;
    
        private Color _backgroundColor;
    
        private double _delayOffset;
    
        private double _delayOnset;
    
        private double _diameter = 0.1D;
    
        private Color _offColor;
    
        private Color _onColor;
    
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="animationSettings")]
        public AnimationSettings AnimationSettings
        {
            get
            {
                return _animationSettings;
            }
            set
            {
                _animationSettings = value;
            }
        }
    
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="backgroundColor")]
        public Color BackgroundColor
        {
            get
            {
                return _backgroundColor;
            }
            set
            {
                _backgroundColor = value;
            }
        }
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="delayOffset")]
        public double DelayOffset
        {
            get
            {
                return _delayOffset;
            }
            set
            {
                _delayOffset = value;
            }
        }
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="delayOnset")]
        public double DelayOnset
        {
            get
            {
                return _delayOnset;
            }
            set
            {
                _delayOnset = value;
            }
        }
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="diameter")]
        public double Diameter
        {
            get
            {
                return _diameter;
            }
            set
            {
                _diameter = value;
            }
        }
    
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="offColor")]
        public Color OffColor
        {
            get
            {
                return _offColor;
            }
            set
            {
                _offColor = value;
            }
        }
    
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="onColor")]
        public Color OnColor
        {
            get
            {
                return _onColor;
            }
            set
            {
                _onColor = value;
            }
        }
    
        public System.IObservable<ControlNoisyStimuli> Process()
        {
            return System.Reactive.Linq.Observable.Defer(() => System.Reactive.Linq.Observable.Return(
                new ControlNoisyStimuli
                {
                    AnimationSettings = _animationSettings,
                    BackgroundColor = _backgroundColor,
                    DelayOffset = _delayOffset,
                    DelayOnset = _delayOnset,
                    Diameter = _diameter,
                    OffColor = _offColor,
                    OnColor = _onColor
                }));
        }
    }


    [Bonsai.CombinatorAttribute()]
    [Bonsai.WorkflowElementCategoryAttribute(Bonsai.ElementCategory.Source)]
    public partial class LoomingCircleStimuli
    {
    
        private AnimationSettings _animationSettings;
    
        private Color _backgroundColor;
    
        private Color _color;
    
        private double _delayOffset;
    
        private double _delayOnset;
    
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="animationSettings")]
        public AnimationSettings AnimationSettings
        {
            get
            {
                return _animationSettings;
            }
            set
            {
                _animationSettings = value;
            }
        }
    
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="backgroundColor")]
        public Color BackgroundColor
        {
            get
            {
                return _backgroundColor;
            }
            set
            {
                _backgroundColor = value;
            }
        }
    
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="color")]
        public Color Color
        {
            get
            {
                return _color;
            }
            set
            {
                _color = value;
            }
        }
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="delayOffset")]
        public double DelayOffset
        {
            get
            {
                return _delayOffset;
            }
            set
            {
                _delayOffset = value;
            }
        }
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="delayOnset")]
        public double DelayOnset
        {
            get
            {
                return _delayOnset;
            }
            set
            {
                _delayOnset = value;
            }
        }
    
        public System.IObservable<LoomingCircleStimuli> Process()
        {
            return System.Reactive.Linq.Observable.Defer(() => System.Reactive.Linq.Observable.Return(
                new LoomingCircleStimuli
                {
                    AnimationSettings = _animationSettings,
                    BackgroundColor = _backgroundColor,
                    Color = _color,
                    DelayOffset = _delayOffset,
                    DelayOnset = _delayOnset
                }));
        }
    }


    [Bonsai.CombinatorAttribute()]
    [Bonsai.WorkflowElementCategoryAttribute(Bonsai.ElementCategory.Source)]
    public partial class LoomingImageStimuli
    {
    
        private AnimationSettings _animationSettings;
    
        private Color _backgroundColor;
    
        private double _delayOffset;
    
        private double _delayOnset;
    
        private double _scaleX = 1D;
    
        private double _scaleY = 1D;
    
        private string _textureName = "";
    
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="animationSettings")]
        public AnimationSettings AnimationSettings
        {
            get
            {
                return _animationSettings;
            }
            set
            {
                _animationSettings = value;
            }
        }
    
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="backgroundColor")]
        public Color BackgroundColor
        {
            get
            {
                return _backgroundColor;
            }
            set
            {
                _backgroundColor = value;
            }
        }
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="delayOffset")]
        public double DelayOffset
        {
            get
            {
                return _delayOffset;
            }
            set
            {
                _delayOffset = value;
            }
        }
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="delayOnset")]
        public double DelayOnset
        {
            get
            {
                return _delayOnset;
            }
            set
            {
                _delayOnset = value;
            }
        }
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="scaleX")]
        public double ScaleX
        {
            get
            {
                return _scaleX;
            }
            set
            {
                _scaleX = value;
            }
        }
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="scaleY")]
        public double ScaleY
        {
            get
            {
                return _scaleY;
            }
            set
            {
                _scaleY = value;
            }
        }
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="textureName")]
        public string TextureName
        {
            get
            {
                return _textureName;
            }
            set
            {
                _textureName = value;
            }
        }
    
        public System.IObservable<LoomingImageStimuli> Process()
        {
            return System.Reactive.Linq.Observable.Defer(() => System.Reactive.Linq.Observable.Return(
                new LoomingImageStimuli
                {
                    AnimationSettings = _animationSettings,
                    BackgroundColor = _backgroundColor,
                    DelayOffset = _delayOffset,
                    DelayOnset = _delayOnset,
                    ScaleX = _scaleX,
                    ScaleY = _scaleY,
                    TextureName = _textureName
                }));
        }
    }


    [Bonsai.CombinatorAttribute()]
    [Bonsai.WorkflowElementCategoryAttribute(Bonsai.ElementCategory.Source)]
    public partial class MovingCircleStimuli
    {
    
        private Point _startPosition;
    
        private Point _endPosition;
    
        private Color _backgroundColor;
    
        private Color _color;
    
        private double _delayOffset;
    
        private double _delayOnset;
    
        private double _radius = 1D;
    
        private double _duration = 1D;
    
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="startPosition")]
        public Point StartPosition
        {
            get
            {
                return _startPosition;
            }
            set
            {
                _startPosition = value;
            }
        }
    
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="endPosition")]
        public Point EndPosition
        {
            get
            {
                return _endPosition;
            }
            set
            {
                _endPosition = value;
            }
        }
    
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="backgroundColor")]
        public Color BackgroundColor
        {
            get
            {
                return _backgroundColor;
            }
            set
            {
                _backgroundColor = value;
            }
        }
    
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="color")]
        public Color Color
        {
            get
            {
                return _color;
            }
            set
            {
                _color = value;
            }
        }
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="delayOffset")]
        public double DelayOffset
        {
            get
            {
                return _delayOffset;
            }
            set
            {
                _delayOffset = value;
            }
        }
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="delayOnset")]
        public double DelayOnset
        {
            get
            {
                return _delayOnset;
            }
            set
            {
                _delayOnset = value;
            }
        }
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="radius")]
        public double Radius
        {
            get
            {
                return _radius;
            }
            set
            {
                _radius = value;
            }
        }
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="duration")]
        public double Duration
        {
            get
            {
                return _duration;
            }
            set
            {
                _duration = value;
            }
        }
    
        public System.IObservable<MovingCircleStimuli> Process()
        {
            return System.Reactive.Linq.Observable.Defer(() => System.Reactive.Linq.Observable.Return(
                new MovingCircleStimuli
                {
                    StartPosition = _startPosition,
                    EndPosition = _endPosition,
                    BackgroundColor = _backgroundColor,
                    Color = _color,
                    DelayOffset = _delayOffset,
                    DelayOnset = _delayOnset,
                    Radius = _radius,
                    Duration = _duration
                }));
        }
    }


    [Bonsai.CombinatorAttribute()]
    [Bonsai.WorkflowElementCategoryAttribute(Bonsai.ElementCategory.Source)]
    public partial class OptogeneticsContinuousStimuli
    {
    
        private double _amplitude = 1D;
    
        private double _duration = 1D;

        private double _delayOnset = 2D;

        private OptogeneticsContinuousStimuliLedTarget _ledTarget = AutomaticGenerators.OptogeneticsContinuousStimuliLedTarget.None;
        
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="amplitude")]
        public double Amplitude
        {
            get
            {
                return _amplitude;
            }
            set
            {
                _amplitude = value;
            }
        }
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="duration")]
        public double Duration
        {
            get
            {
                return _duration;
            }
            set
            {
                _duration = value;
            }
        }

        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="delayOnset")]
        public double DelayOnset
        {
            get
            {
                return _delayOnset;
            }
            set
            {
                _delayOnset = value;
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="ledTarget")]
        public OptogeneticsContinuousStimuliLedTarget LedTarget
        {
            get
            {
                return _ledTarget;
            }
            set
            {
                _ledTarget = value;
            }
        }
    
        public System.IObservable<OptogeneticsContinuousStimuli> Process()
        {
            return System.Reactive.Linq.Observable.Defer(() => System.Reactive.Linq.Observable.Return(
                new OptogeneticsContinuousStimuli
                {
                    Amplitude = _amplitude,
                    Duration = _duration,
                    DelayOnset = _delayOnset,
                    LedTarget = _ledTarget
                }));
        }
    }

    [Bonsai.CombinatorAttribute()]
    [Bonsai.WorkflowElementCategoryAttribute(Bonsai.ElementCategory.Source)]
    public partial class OptogeneticsPulsedStimuli
    {
    
        private double _amplitude = 1D;
    
        private double _duration = 1D;
    
        private int _dutyCycle = 50;
    
        private double _frequency = 10D;

        private double _delayOnset = 2D;

        private OptogeneticsPulsedStimuliLedTarget _ledTarget = AutomaticGenerators.OptogeneticsPulsedStimuliLedTarget.None;
        
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="amplitude")]
        public double Amplitude
        {
            get
            {
                return _amplitude;
            }
            set
            {
                _amplitude = value;
            }
        }
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="duration")]
        public double Duration
        {
            get
            {
                return _duration;
            }
            set
            {
                _duration = value;
            }
        }
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="dutyCycle")]
        public int DutyCycle
        {
            get
            {
                return _dutyCycle;
            }
            set
            {
                _dutyCycle = value;
            }
        }
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="frequency")]
        public double Frequency
        {
            get
            {
                return _frequency;
            }
            set
            {
                _frequency = value;
            }
        }

        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="delayOnset")]
        public double DelayOnset
        {
            get
            {
                return _delayOnset;
            }
            set
            {
                _delayOnset = value;
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="ledTarget")]
        public OptogeneticsPulsedStimuliLedTarget LedTarget
        {
            get
            {
                return _ledTarget;
            }
            set
            {
                _ledTarget = value;
            }
        }
    
        public System.IObservable<OptogeneticsPulsedStimuli> Process()
        {
            return System.Reactive.Linq.Observable.Defer(() => System.Reactive.Linq.Observable.Return(
                new OptogeneticsPulsedStimuli
                {
                    Amplitude = _amplitude,
                    Duration = _duration,
                    DutyCycle = _dutyCycle,
                    Frequency = _frequency,
                    DelayOnset = _delayOnset,
                    LedTarget = _ledTarget
                }));
        }
    }

    [Bonsai.CombinatorAttribute()]
    [Bonsai.WorkflowElementCategoryAttribute(Bonsai.ElementCategory.Source)]
    public partial class OptogeneticsRampedStimuli
    {
    
        private double _amplitude = 1D;
    
        private double _durationSteady = 1D;
    
        private double _durationRamp = 1D;
    
        private double _delayOnset = 2D;

        private OptogeneticsRampedStimuliLedTarget _ledTarget = AutomaticGenerators.OptogeneticsRampedStimuliLedTarget.None;
        
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="amplitude")]
        public double Amplitude
        {
            get
            {
                return _amplitude;
            }
            set
            {
                _amplitude = value;
            }
        }
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="durationSteady")]
        public double DurationSteady
        {
            get
            {
                return _durationSteady;
            }
            set
            {
                _durationSteady = value;
            }
        }

        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="durationRamp")]
        public double DurationRamp
        {
            get
            {
                return _durationRamp;
            }
            set
            {
                _durationRamp = value;
            }
        }

        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="delayOnset")]
        public double DelayOnset
        {
            get
            {
                return _delayOnset;
            }
            set
            {
                _delayOnset = value;
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="ledTarget")]
        public OptogeneticsRampedStimuliLedTarget LedTarget
        {
            get
            {
                return _ledTarget;
            }
            set
            {
                _ledTarget = value;
            }
        }
    
        public System.IObservable<OptogeneticsRampedStimuli> Process()
        {
            return System.Reactive.Linq.Observable.Defer(() => System.Reactive.Linq.Observable.Return(
                new OptogeneticsRampedStimuli
                {
                    Amplitude = _amplitude,
                    DurationSteady = _durationSteady,
                    DurationRamp = _durationRamp,
                    DelayOnset = _delayOnset,
                    LedTarget = _ledTarget
                }));
        }
    }

    [Bonsai.CombinatorAttribute()]
    [Bonsai.WorkflowElementCategoryAttribute(Bonsai.ElementCategory.Source)]
    public partial class TrialSettings
    {
    
        private ControlNoisyStimuli _controlNoisyStimuli;
    
        private LoomingCircleStimuli _loomingCircleStimuli;
    
        private LoomingImageStimuli _loomingImageStimuli;
    
        private OptogeneticsContinuousStimuli _optogeneticsContinuousStimuli;
    
        private OptogeneticsPulsedStimuli _optogeneticsPulsedStimuli;
        private OptogeneticsRampedStimuli _optogeneticsRampedStimuli;

        private MovingCircleStimuli _movingCircleStimuli;
    
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="controlNoisyStimuli")]
        public ControlNoisyStimuli ControlNoisyStimuli
        {
            get
            {
                return _controlNoisyStimuli;
            }
            set
            {
                _controlNoisyStimuli = value;
            }
        }
    
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="loomingCircleStimuli")]
        public LoomingCircleStimuli LoomingCircleStimuli
        {
            get
            {
                return _loomingCircleStimuli;
            }
            set
            {
                _loomingCircleStimuli = value;
            }
        }
    
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="loomingImageStimuli")]
        public LoomingImageStimuli LoomingImageStimuli
        {
            get
            {
                return _loomingImageStimuli;
            }
            set
            {
                _loomingImageStimuli = value;
            }
        }
    
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="optogeneticsContinuousStimuli")]
        public OptogeneticsContinuousStimuli OptogeneticsContinuousStimuli
        {
            get
            {
                return _optogeneticsContinuousStimuli;
            }
            set
            {
                _optogeneticsContinuousStimuli = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="optogeneticsPulsedStimuli")]
        public OptogeneticsPulsedStimuli OptogeneticsPulsedStimuli
        {
            get
            {
                return _optogeneticsPulsedStimuli;
            }
            set
            {
                _optogeneticsPulsedStimuli = value;
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="optogeneticsRampedStimuli")]
        public OptogeneticsRampedStimuli OptogeneticsRampedStimuli
        {
            get
            {
                return _optogeneticsRampedStimuli;
            }
            set
            {
                _optogeneticsRampedStimuli = value;
            }
        }
    
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="movingCircleStimuli")]
        public MovingCircleStimuli MovingCircleStimuli
        {
            get
            {
                return _movingCircleStimuli;
            }
            set
            {
                _movingCircleStimuli = value;
            }
        }
    
        public System.IObservable<TrialSettings> Process()
        {
            return System.Reactive.Linq.Observable.Defer(() => System.Reactive.Linq.Observable.Return(
                new TrialSettings
                {
                    ControlNoisyStimuli = _controlNoisyStimuli,
                    LoomingCircleStimuli = _loomingCircleStimuli,
                    LoomingImageStimuli = _loomingImageStimuli,
                    OptogeneticsContinuousStimuli = _optogeneticsContinuousStimuli,
                    OptogeneticsPulsedStimuli = _optogeneticsPulsedStimuli,
                    OptogeneticsRampedStimuli = _optogeneticsRampedStimuli,
                    MovingCircleStimuli = _movingCircleStimuli
                }));
        }
    }


    [Bonsai.CombinatorAttribute()]
    [Bonsai.WorkflowElementCategoryAttribute(Bonsai.ElementCategory.Source)]
    public partial class BonFlyStimuli
    {
    
        private System.Collections.Generic.List<TrialSettings> _trials = new System.Collections.Generic.List<TrialSettings>();
    
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="trials")]
        public System.Collections.Generic.List<TrialSettings> Trials
        {
            get
            {
                return _trials;
            }
            set
            {
                _trials = value;
            }
        }
    
        public System.IObservable<BonFlyStimuli> Process()
        {
            return System.Reactive.Linq.Observable.Defer(() => System.Reactive.Linq.Observable.Return(
                new BonFlyStimuli
                {
                    Trials = _trials
                }));
        }
    }


    public enum OptogeneticsContinuousStimuliLedTarget
    {
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="None")]
        None = 0,
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="Led0")]
        Led0 = 1,
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="Led1")]
        Led1 = 2,
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="Both")]
        Both = 3,
    }
    public enum OptogeneticsPulsedStimuliLedTarget
    {
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="None")]
        None = 0,
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="Led0")]
        Led0 = 1,
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="Led1")]
        Led1 = 2,
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="Both")]
        Both = 3,
    }
    public enum OptogeneticsRampedStimuliLedTarget
    {
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="None")]
        None = 0,
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="Led0")]
        Led0 = 1,
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="Led1")]
        Led1 = 2,
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="Both")]
        Both = 3,
    }
    /// <summary>
    /// Serializes a sequence of data model objects into YAML strings.
    /// </summary>
    [Bonsai.CombinatorAttribute()]
    [Bonsai.WorkflowElementCategoryAttribute(Bonsai.ElementCategory.Transform)]
    [System.ComponentModel.DescriptionAttribute("Serializes a sequence of data model objects into YAML strings.")]
    public partial class SerializeToYaml
    {
    
        private System.IObservable<string> Process<T>(System.IObservable<T> source)
        {
            return System.Reactive.Linq.Observable.Defer(() =>
            {
                var serializer = new YamlDotNet.Serialization.SerializerBuilder().Build();
                return System.Reactive.Linq.Observable.Select(source, value => serializer.Serialize(value)); 
            });
        }

        public System.IObservable<string> Process(System.IObservable<Point> source)
        {
            return Process<Point>(source);
        }

        public System.IObservable<string> Process(System.IObservable<AnimationSettings> source)
        {
            return Process<AnimationSettings>(source);
        }

        public System.IObservable<string> Process(System.IObservable<Color> source)
        {
            return Process<Color>(source);
        }

        public System.IObservable<string> Process(System.IObservable<ControlNoisyStimuli> source)
        {
            return Process<ControlNoisyStimuli>(source);
        }

        public System.IObservable<string> Process(System.IObservable<LoomingCircleStimuli> source)
        {
            return Process<LoomingCircleStimuli>(source);
        }

        public System.IObservable<string> Process(System.IObservable<LoomingImageStimuli> source)
        {
            return Process<LoomingImageStimuli>(source);
        }

        public System.IObservable<string> Process(System.IObservable<MovingCircleStimuli> source)
        {
            return Process<MovingCircleStimuli>(source);
        }

        public System.IObservable<string> Process(System.IObservable<OptogeneticsContinuousStimuli> source)
        {
            return Process<OptogeneticsContinuousStimuli>(source);
        }

        public System.IObservable<string> Process(System.IObservable<OptogeneticsPulsedStimuli> source)
        {
            return Process<OptogeneticsPulsedStimuli>(source);
        }
        public System.IObservable<string> Process(System.IObservable<OptogeneticsRampedStimuli> source)
        {
            return Process<OptogeneticsRampedStimuli>(source);
        }
        public System.IObservable<string> Process(System.IObservable<TrialSettings> source)
        {
            return Process<TrialSettings>(source);
        }

        public System.IObservable<string> Process(System.IObservable<BonFlyStimuli> source)
        {
            return Process<BonFlyStimuli>(source);
        }
    }


    /// <summary>
    /// Deserializes a sequence of YAML strings into data model objects.
    /// </summary>
    [System.ComponentModel.DefaultPropertyAttribute("Type")]
    [Bonsai.WorkflowElementCategoryAttribute(Bonsai.ElementCategory.Transform)]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Bonsai.Expressions.TypeMapping<Point>))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Bonsai.Expressions.TypeMapping<AnimationSettings>))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Bonsai.Expressions.TypeMapping<Color>))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Bonsai.Expressions.TypeMapping<ControlNoisyStimuli>))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Bonsai.Expressions.TypeMapping<LoomingCircleStimuli>))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Bonsai.Expressions.TypeMapping<LoomingImageStimuli>))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Bonsai.Expressions.TypeMapping<MovingCircleStimuli>))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Bonsai.Expressions.TypeMapping<OptogeneticsContinuousStimuli>))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Bonsai.Expressions.TypeMapping<OptogeneticsPulsedStimuli>))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Bonsai.Expressions.TypeMapping<OptogeneticsRampedStimuli>))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Bonsai.Expressions.TypeMapping<TrialSettings>))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Bonsai.Expressions.TypeMapping<BonFlyStimuli>))]
    [System.ComponentModel.DescriptionAttribute("Deserializes a sequence of YAML strings into data model objects.")]
    public partial class DeserializeFromYaml : Bonsai.Expressions.SingleArgumentExpressionBuilder
    {
    
        public DeserializeFromYaml()
        {
            Type = new Bonsai.Expressions.TypeMapping<BonFlyStimuli>();
        }

        public Bonsai.Expressions.TypeMapping Type { get; set; }

        public override System.Linq.Expressions.Expression Build(System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression> arguments)
        {
            var typeMapping = (Bonsai.Expressions.TypeMapping)Type;
            var returnType = typeMapping.GetType().GetGenericArguments()[0];
            return System.Linq.Expressions.Expression.Call(
                typeof(DeserializeFromYaml),
                "Process",
                new System.Type[] { returnType },
                System.Linq.Enumerable.Single(arguments));
        }

        private static System.IObservable<T> Process<T>(System.IObservable<string> source)
        {
            return System.Reactive.Linq.Observable.Defer(() =>
            {
                var serializer = new YamlDotNet.Serialization.DeserializerBuilder().Build();
                return System.Reactive.Linq.Observable.Select(source, value =>
                {
                    var reader = new System.IO.StringReader(value);
                    var parser = new YamlDotNet.Core.MergingParser(new YamlDotNet.Core.Parser(reader));
                    return serializer.Deserialize<T>(parser);
                });
            });
        }
    }
}